目前网约车订单过粗召模型前，需要过滤了女司机的订单，最近一起P1人不符的case，由于是女司机，导致没有进行asr转译。
粗召逻辑考虑后续均在utu中，因此需要放开工程放开调用粗召的前置性别逻辑

这个需求比较简单 就是我们现在调粗召策略的时候，工程前置过滤掉女性司机，现在想把这个过滤条件取消掉。你就验证下司机是女的，然后订单能不能调粗召模型就行


测试流程

1. 修改代码

	•	取消前置性别过滤：首先，在代码中移除或注释掉过滤掉女性司机的逻辑。比如：
	•	找到当前判断性别的条件（例如 if (driver.gender == "female")）并删除或注释掉。
	•	确保不会因为司机性别是女性而导致订单被过滤掉，确保所有订单都能进入后续的粗召流程。

2. 编写测试用例

在 Aone 中，你可以创建一个简单的测试用例来验证该修改。测试用例的流程如下：
	•	测试用例名称：验证女性司机的订单是否能够正常调取粗召模型。
	•	测试步骤：
	1.	提交一个女性司机的订单。
	2.	确保该订单能够成功进入粗召模型处理流程。
	•	预期结果：订单能够正常进入粗召模型，且不受性别过滤影响。
	•	测试用例执行：
	•	可以手动执行，也可以将其作为自动化测试用例集成到 Aone 流水线中。

3. 执行测试

	•	手动验证：
	•	提交几个不同的订单，包括男性和女性司机的订单。
	•	验证是否所有订单（包括女性司机的订单）都能进入粗召模型，确保女性司机的订单不被过滤。
	•	自动化验证：
	•	使用 Aone 自动化测试工具集成相关测试脚本，确保在提交订单后，粗召模型能够正常被调用。
	•	可以使用 Aone 的API测试功能或自动化脚本（例如使用 Selenium）模拟用户行为，提交订单并跟踪是否成功触发了粗召模型。

4. 验证粗召模型调用

在测试中，关键是确认粗召模型是否成功被调用。这可以通过以下方式验证：
	•	检查日志：查看粗召模型的日志，确认女性司机的订单是否被正确地提交到模型中进行处理。
	•	验证模型输出：确保女性司机的订单返回了正确的结果，并且模型没有因为性别问题做出不正确的判断。

5. 回归测试（可选）

如果修改代码后担心其他功能受到影响，做一下简单的回归测试是有帮助的。可以验证：
	•	其他类型（男性司机）的订单是否仍然能够正常进入粗召模型。
	•	确保没有影响到其他处理流程（例如订单处理、数据记录等）。

6. Aone测试报告

执行完测试后，Aone 会生成一份测试报告，包含以下信息：
	•	测试状态：是否通过或失败。
	•	错误详情：如果测试失败，报告中会详细列出错误信息。
	•	性能指标：如果涉及到性能测试，Aone 会展示相关的性能数据。

7. 上线部署

测试通过后，可以将修改的代码部署到生产环境中，确保女性司机的订单在实际环境中不被过滤，能够正常处理。

简化的测试步骤总结

	1.	修改代码：取消女性司机过滤逻辑。
	2.	编写测试用例：在 Aone 中创建一个测试用例，确保女性司机的订单能够调取粗召模型。
	3.	执行测试：
	•	手动验证：提交女性司机订单，确认是否能进入粗召模型。
	•	自动化验证：通过 Aone 自动化工具提交订单并验证粗召模型调用。
	4.	检查结果：查看粗召模型日志，确认是否成功调用。
	5.	回归测试（可选）：确保修改没有影响其他功能。
	6.	生成报告并部署：查看 Aone 测试报告，确认测试通过后进行部署。

这个流程简洁直接，重点是确保取消性别过滤后，女性司机的订单能够顺利进入粗召模型进行处理。